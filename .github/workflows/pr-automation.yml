name: PR Automation

on:
  pull_request:
    types: [opened, synchronize, ready_for_review]

permissions:
  pull-requests: write
  contents: read

jobs:
  auto-approve:
    name: Auto Approve
    runs-on: ubuntu-latest
    if: >
      !github.event.pull_request.draft &&
      (
        github.actor == 'dependabot[bot]' || 
        github.actor == github.repository_owner
      ) &&
      !contains(github.event.pull_request.title, '[manual review]')
    
    steps:
      - name: Wait for Build and Test
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          check-name: 'Build and Test'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 30

      - name: Wait for Code Quality
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          check-name: 'Code Quality'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 30

      - name: Wait for Security Scan
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          check-name: 'Security Scan'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 30

      - name: Approve PR
        uses: juliangruber/approve-pull-request-action@v2.0.6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.pull_request.number }}

      - name: Enable auto-merge
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ github.event.pull_request.number }}
          merge-method: squash

  request-manual-review:
    name: Request Manual Review
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.title, '[manual review]')
    
    steps:
      - name: Add label
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['needs-manual-review']
            });