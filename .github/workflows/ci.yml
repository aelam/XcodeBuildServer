name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DEVELOPER_DIR: /Applications/Xcode_15.4.app/Contents/Developer

jobs:
  build-and-test:
    name: Build and Test
    runs-on: macos-14
    
    strategy:
      matrix:
        swift-version: ['6.1']
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Swift
      uses: swift-actions/setup-swift@v2
      with:
        swift-version: ${{ matrix.swift-version }}
    
    - name: Cache Swift Package Manager
      uses: actions/cache@v4
      with:
        path: |
          .build
          ~/.cache/org.swift.swiftpm
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
    
    - name: Build
      run: swift build -v
      
    - name: Run Tests
      run: swift test --enable-code-coverage
      
    - name: Generate Code Coverage
      run: |
        xcrun llvm-cov export -format="lcov" \
          .build/debug/XcodeBuildServerPackageTests.xctest/Contents/MacOS/XcodeBuildServerPackageTests \
          -instr-profile .build/debug/codecov/default.profdata > coverage.lcov
        
    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.lcov
        flags: unittests
        name: codecov-umbrella
        
  lint:
    name: SwiftLint
    runs-on: macos-14
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Install SwiftLint
      run: |
        brew install swiftlint
        
    - name: Run SwiftLint
      run: |
        swiftlint --strict --reporter github-actions-logging
        
  security-audit:
    name: Security Audit
    runs-on: macos-14
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Audit Dependencies
      run: |
        swift package show-dependencies --format json > dependencies.json
        # Check for known vulnerabilities (basic check)
        if [ -f dependencies.json ]; then
          echo "Dependencies audit completed"
        fi
        
  build-release:
    name: Build Release
    runs-on: macos-14
    if: github.ref == 'refs/heads/main'
    needs: [build-and-test, lint]
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Build Release
      run: swift build -c release --arch arm64 --arch x86_64
      
    - name: Archive Binary
      run: |
        mkdir -p artifacts
        cp .build/apple/Products/Release/XcodeBuildServerCLI artifacts/
        tar -czf artifacts/xcode-build-server-macos.tar.gz -C artifacts XcodeBuildServerCLI
        
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: xcode-build-server-macos
        path: artifacts/xcode-build-server-macos.tar.gz
        retention-days: 30