name: Basic CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DEVELOPER_DIR: /Applications/Xcode_15.4.app/Contents/Developer

jobs:
  build-and-test:
    name: Build and Test
    runs-on: macos-14
    
    strategy:
      matrix:
        swift-version: ['6.1']
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Swift
      uses: swift-actions/setup-swift@v2
      with:
        swift-version: ${{ matrix.swift-version }}
    
    - name: Cache Swift Package Manager
      uses: actions/cache@v4
      with:
        path: |
          .build
          ~/.cache/org.swift.swiftpm
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
    
    - name: Build
      run: swift build -v
      
    - name: Run Tests
      run: swift test
      
  lint:
    name: SwiftLint
    runs-on: macos-14
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Install SwiftLint
      run: |
        # Install SwiftLint via Homebrew
        brew install swiftlint
        
    - name: Run SwiftLint
      run: |
        # Run SwiftLint with our configuration
        swiftlint --reporter github-actions-logging
        
    - name: Run SwiftLint (Strict Check)
      run: |
        # Show what would fail in strict mode
        swiftlint --strict || echo "::warning::Some SwiftLint warnings found"
        
  basic-security:
    name: Basic Security Check
    runs-on: macos-14
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Check for sensitive patterns
      run: |
        echo "Scanning for sensitive patterns..."
        
        # Check for common secret patterns
        SECRETS_FOUND=false
        
        # API Keys
        if grep -r "api[_-]key.*=" Sources/ Tests/ --include="*.swift" 2>/dev/null | grep -v "// " | grep -v "* "; then
          echo "::warning::Potential API key found"
          SECRETS_FOUND=true
        fi
        
        # Hardcoded URLs with credentials
        if grep -r "://.*:.*@" Sources/ Tests/ --include="*.swift" 2>/dev/null; then
          echo "::warning::URL with credentials found"
          SECRETS_FOUND=true
        fi
        
        # TODO and FIXME comments (informational)
        TODO_COUNT=$(grep -r "TODO\|FIXME" Sources/ --include="*.swift" 2>/dev/null | wc -l | tr -d ' ')
        if [ "$TODO_COUNT" -gt 0 ]; then
          echo "::notice::Found $TODO_COUNT TODO/FIXME comments"
        fi
        
        if [ "$SECRETS_FOUND" = false ]; then
          echo "âœ… No obvious secrets found"
        fi
        
  build-release:
    name: Build Release
    runs-on: macos-14
    if: github.ref == 'refs/heads/main'
    needs: [build-and-test, lint]
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Swift
      uses: swift-actions/setup-swift@v2
      with:
        swift-version: '6.1'
        
    - name: Build Release Binary
      run: |
        swift build -c release
        
    - name: Create Artifact
      run: |
        mkdir -p artifacts
        cp .build/release/XcodeBuildServerCLI artifacts/xcode-build-server
        chmod +x artifacts/xcode-build-server
        
        # Create info file
        echo "Build Information:" > artifacts/build-info.txt
        echo "Commit: $GITHUB_SHA" >> artifacts/build-info.txt
        echo "Branch: $GITHUB_REF_NAME" >> artifacts/build-info.txt
        echo "Built: $(date)" >> artifacts/build-info.txt
        
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: xcode-build-server-${{ github.sha }}
        path: artifacts/
        retention-days: 7